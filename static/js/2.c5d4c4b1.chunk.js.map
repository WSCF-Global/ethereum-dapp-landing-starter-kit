{"version":3,"sources":["../node_modules/web3-provider-engine/subproviders/rpc.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/index.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/errors.js","../node_modules/bnc-onboard/dist/esm/providerEngine-83b17d1e.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/fast-safe-stringify/index.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/classes.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/utils.js"],"names":["xhr","process","browser","require","inherits","createPayload","Subprovider","ethErrors","serializeError","RpcSource","opts","this","rpcUrl","module","exports","prototype","handleRequest","payload","next","end","targetUrl","sanitizedPayload","id","jsonrpc","method","params","sanitizePayload","newPayload","uri","headers","body","JSON","stringify","rejectUnauthorized","timeout","err","res","statusCode","rpc","methodNotFound","Error","msg","data","parse","console","error","stack","result","EthereumRpcError","EthereumProviderError","getMessageFromCode","ERROR_CODES","getEthJsonRpcError","code","validateOpts","message","getEthProviderError","Array","isArray","invalidRequest","invalidParams","internal","server","Number","isInteger","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","provider","userRejectedRequest","unauthorized","unsupportedMethod","custom","createProvider","config","getAccounts","signTransaction","processMessage","processPersonalMessage","signMessage","signPersonalMessage","pollingInterval","get_store_value","app","blockPollingInterval","idMgmt","HookedWalletSubprovider","rpcSubProvider","includes","concat","Web3ProviderEngine","addProvider","SubscriptionSubprovider","FilterSubprovider","start","on","getPrototypeOf","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","undefined","TypeError","has","get","set","Wrapper","arguments","constructor","Object","create","value","enumerable","writable","configurable","fn","Function","toString","call","indexOf","default","stable","deterministicStringify","stableStringify","arr","replacerStack","obj","replacer","spacer","decirc","length","replaceGetterValues","part","pop","defineProperty","val","k","parent","i","propertyDescriptor","getOwnPropertyDescriptor","push","keys","key","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","v","splice","safeStringify","serialized","serialize","stringifyReplacer","isValidEthProviderCode","_","errorValues","FALLBACK_ERROR_CODE","JSON_RPC_SERVER_ERROR_MESSAGE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","isJsonRpcServerError","isValidCode","assignOriginalError","assign","fallbackError","hasOwnProperty","originalError"],"mappings":"6FAAA,gBAAMA,EAAMC,EAAQC,QAAUC,EAAQ,KAASA,EAAQ,MACjDC,EAAWD,EAAQ,KAAQC,SAC3BC,EAAgBF,EAAQ,KACxBG,EAAcH,EAAQ,K,EACUA,EAAQ,MAAtCI,E,EAAAA,UAAWC,E,EAAAA,eAOnB,SAASC,EAAUC,GACJC,KACRC,OAASF,EAAKE,OANrBC,EAAOC,QAAUL,EAEjBL,EAASK,EAAWH,GAOpBG,EAAUM,UAAUC,cAAgB,SAASC,EAASC,EAAMC,GAC1D,IACMC,EADOT,KACUC,OAGjBS,EAuDR,SAA0BJ,GACxB,MAAO,CACLK,GAAIL,EAAQK,GACZC,QAASN,EAAQM,QACjBC,OAAQP,EAAQO,OAChBC,OAAQR,EAAQQ,QA5DOC,CAAgBT,GACnCU,EAAatB,EAAcgB,GAEjCrB,EAAI,CACF4B,IAAKR,EACLI,OAAQ,OACRK,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,GACrBM,oBAAoB,EACpBC,QAAS,MACR,SAASC,EAAKC,EAAKN,GACpB,GAAIK,EAAK,OAAOhB,EAAIX,EAAe2B,IAGnC,OAAQC,EAAIC,YACV,KAAK,IACH,OAAOlB,EAAIZ,EAAU+B,IAAIC,kBAC3B,KAAK,IACH,OAAQ,WAGN,IAAMJ,EAAM,IAAIK,MADhBC,0HAEA,OAAOtB,EAAIX,EAAe2B,IAJpB,GAMV,KAAK,IACH,OAAQ,WACN,IAAMA,EAAM,IAAIK,MAAJ,qBACZ,OAAOrB,EAAIX,EAAe2B,IAFpB,GAIV,QACE,GAAsB,KAAlBC,EAAIC,WAAmB,CACzB,IAAMI,EAAM,kBAAoBL,EAAIN,KAC9BK,EAAM,IAAIK,MAAMC,GACtB,OAAOtB,EAAIX,EAAe2B,KAKhC,IAAIO,EACJ,IACEA,EAAOX,KAAKY,MAAMb,GAClB,MAAOK,GAEP,OADAS,QAAQC,MAAMV,EAAIW,OACX3B,EAAIX,EAAe2B,IAE5B,GAAIO,EAAKG,MAAO,OAAO1B,EAAIuB,EAAKG,OAEhC1B,EAAI,KAAMuB,EAAKK,c,6CCtEiC5C,EAAQ,KAApD6C,E,EAAAA,iBAAkBC,E,EAAAA,sB,EAGtB9C,EAAQ,KADVK,E,EAAAA,eAAgB0C,E,EAAAA,mBAEZ3C,EAAYJ,EAAQ,MACpBgD,EAAchD,EAAQ,KAE5BU,EAAOC,QAAU,CACfP,YACAyC,mBACAC,wBACAzC,iBACA0C,qBAEAC,gB,wqCCdkDhD,EAAQ,KAApD6C,E,EAAAA,iBAAkBC,E,EAAAA,sBAClBC,EAAuB/C,EAAQ,KAA/B+C,mBACFC,EAAchD,EAAQ,KAwN5B,SAASiD,EAAmBC,EAAM3C,GAAM,MACZ4C,EAAa5C,GADD,SAC9B6C,EAD8B,KACrBb,EADqB,KAEtC,OAAO,IAAIM,EACTK,EACAE,GAAWL,EAAmBG,GAC9BX,GAIJ,SAASc,EAAoBH,EAAM3C,GAAM,MACb4C,EAAa5C,GADA,SAC/B6C,EAD+B,KACtBb,EADsB,KAEvC,OAAO,IAAIO,EACTI,EACAE,GAAWL,EAAmBG,GAC9BX,GAIJ,SAASY,EAAc5C,GACrB,IAAI6C,EAASb,EASb,OARIhC,IACkB,kBAATA,EACT6C,EAAU7C,EACe,kBAATA,GAAsB+C,MAAMC,QAAQhD,KACpD6C,EAAU7C,EAAK6C,QACfb,EAAOhC,EAAKgC,OAGT,CAAEa,EAASb,GAlPpB7B,EAAOC,QAAU,CACfwB,IAAK,CASHK,MAAO,SAACjC,GAAD,OAAU0C,EACfD,EAAYb,IAAIK,MAAOjC,IAWzBiD,eAAgB,SAACjD,GAAD,OAAU0C,EACxBD,EAAYb,IAAIqB,eAAgBjD,IAWlCkD,cAAe,SAAClD,GAAD,OAAU0C,EACvBD,EAAYb,IAAIsB,cAAelD,IAWjC6B,eAAgB,SAAC7B,GAAD,OAAU0C,EACxBD,EAAYb,IAAIC,eAAgB7B,IAWlCmD,SAAU,SAACnD,GAAD,OAAU0C,EAClBD,EAAYb,IAAIuB,SAAUnD,IAc5BoD,OAAQ,SAACpD,GACP,IAAKA,GAAwB,kBAATA,GAAqB+C,MAAMC,QAAQhD,GACrD,MAAM,IAAI8B,MAAM,mEAFF,IAIRa,EAAS3C,EAAT2C,KACR,IAAKU,OAAOC,UAAUX,IAASA,GAAQ,OAASA,GAAQ,MACtD,MAAM,IAAIb,MACR,iEAGJ,OAAOY,EAAmBC,EAAM3C,IAWlCuD,aAAc,SAACvD,GAAD,OAAU0C,EACtBD,EAAYb,IAAI2B,aAAcvD,IAWhCwD,iBAAkB,SAACxD,GAAD,OAAU0C,EAC1BD,EAAYb,IAAI4B,iBAAkBxD,IAWpCyD,oBAAqB,SAACzD,GAAD,OAAU0C,EAC7BD,EAAYb,IAAI6B,oBAAqBzD,IAWvC0D,oBAAqB,SAAC1D,GAAD,OAAU0C,EAC7BD,EAAYb,IAAI8B,oBAAqB1D,IAWvC2D,mBAAoB,SAAC3D,GAAD,OAAU0C,EAC5BD,EAAYb,IAAI+B,mBAAoB3D,KAIxC4D,SAAU,CASRC,oBAAqB,SAAC7D,GACpB,OAAO8C,EACLL,EAAYmB,SAASC,oBAAqB7D,IAY9C8D,aAAc,SAAC9D,GACb,OAAO8C,EACLL,EAAYmB,SAASE,aAAc9D,IAYvC+D,kBAAmB,SAAC/D,GAClB,OAAO8C,EACLL,EAAYmB,SAASG,kBAAmB/D,IAa5CgE,OAAQ,SAAChE,GACP,IAAKA,GAAwB,kBAATA,GAAqB+C,MAAMC,QAAQhD,GACrD,MAAM,IAAI8B,MAAM,wEAFF,IAIRa,EAAwB3C,EAAxB2C,KAAME,EAAkB7C,EAAlB6C,QAASb,EAAShC,EAATgC,KACvB,IAAKa,GAA8B,kBAAZA,EAAsB,MAAM,IAAIf,MACrD,uCAEF,OAAO,IAAIS,EAAsBI,EAAME,EAASb,O,iCCpNtD,4IA2CeiC,UAhCf,SAAwBC,GACtB,IAAIC,EAAcD,EAAOC,YACrBC,EAAkBF,EAAOE,gBACzBlE,EAASgE,EAAOhE,OAChBmE,EAAiBH,EAAOG,eACxBC,EAAyBJ,EAAOI,uBAChCC,EAAcL,EAAOK,YACrBC,EAAsBN,EAAOM,oBAC7BC,EAAkBC,YAAgBC,KAAKC,qBACvCC,EAASV,GAAe,IAAIW,IAAwB,CACtDX,YAAaA,EACbC,gBAAiBA,EACjBC,eAAgBA,EAChBC,uBAAwBA,EACxBC,YAAaA,EACbC,oBAAqBA,IAEnBO,EAAiB,IAAIhF,IAAU,CACjCG,OAAQA,EAAO8E,SAAS,QAAU9E,EAAS,WAAW+E,OAAO/E,KAE3D0D,EAAW,IAAIsB,IAAmB,CACpCT,gBAAiBA,IAQnB,OANAb,EAASuB,YAAY,IAAIC,KACzBxB,EAASuB,YAAY,IAAIE,KACzBR,GAAUjB,EAASuB,YAAYN,GAC/BjB,EAASuB,YAAYJ,GACrBnB,EAAS0B,QACT1B,EAAS2B,GAAG,QAASrD,QAAQC,OACtByB,I,oBCxCT,IAAI4B,EAAiB,EAAQ,KAEzBC,EAAiB,EAAQ,KAEzBC,EAAmB,EAAQ,KAE3BC,EAAY,EAAQ,KAExB,SAASC,EAAiBC,GACxB,IAAIC,EAAwB,oBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BA7F,EAAOC,QAAUwF,EAAmB,SAA0BC,GAC5D,GAAc,OAAVA,IAAmBH,EAAiBG,GAAQ,OAAOA,EAEvD,GAAqB,oBAAVA,EACT,MAAM,IAAII,UAAU,sDAGtB,GAAsB,qBAAXH,EAAwB,CACjC,GAAIA,EAAOI,IAAIL,GAAQ,OAAOC,EAAOK,IAAIN,GAEzCC,EAAOM,IAAIP,EAAOQ,GAGpB,SAASA,IACP,OAAOV,EAAUE,EAAOS,UAAWd,EAAevF,MAAMsG,aAW1D,OARAF,EAAQhG,UAAYmG,OAAOC,OAAOZ,EAAMxF,UAAW,CACjDkG,YAAa,CACXG,MAAOL,EACPM,YAAY,EACZC,UAAU,EACVC,cAAc,KAGXpB,EAAeY,EAASR,IAG1BD,EAAiBC,GAG1B1F,EAAOC,QAAUwF,G,kBCtCjBzF,EAAOC,QAJP,SAA2B0G,GACzB,OAAgE,IAAzDC,SAASC,SAASC,KAAKH,GAAII,QAAQ,mB,kBCD5C/G,EAAOC,QAAUkB,EACjBA,EAAU6F,QAAU7F,EACpBA,EAAU8F,OAASC,EACnB/F,EAAUgG,gBAAkBD,EAE5B,IAAIE,EAAM,GACNC,EAAgB,GAGpB,SAASlG,EAAWmG,EAAKC,EAAUC,GAEjC,IAAIjG,EAMJ,IAPAkG,EAAOH,EAAK,GAAI,QAAIzB,GAGlBtE,EAD2B,IAAzB8F,EAAcK,OACVxG,KAAKC,UAAUmG,EAAKC,EAAUC,GAE9BtG,KAAKC,UAAUmG,EAAKK,EAAoBJ,GAAWC,GAErC,IAAfJ,EAAIM,QAAc,CACvB,IAAIE,EAAOR,EAAIS,MACK,IAAhBD,EAAKF,OACPrB,OAAOyB,eAAeF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE7CA,EAAK,GAAGA,EAAK,IAAMA,EAAK,GAG5B,OAAOrG,EAET,SAASkG,EAAQM,EAAKC,EAAG/F,EAAOgG,GAC9B,IAAIC,EACJ,GAAmB,kBAARH,GAA4B,OAARA,EAAc,CAC3C,IAAKG,EAAI,EAAGA,EAAIjG,EAAMyF,OAAQQ,IAC5B,GAAIjG,EAAMiG,KAAOH,EAAK,CACpB,IAAII,EAAqB9B,OAAO+B,yBAAyBH,EAAQD,GAYjE,iBAX+BnC,IAA3BsC,EAAmBnC,IACjBmC,EAAmBzB,cACrBL,OAAOyB,eAAeG,EAAQD,EAAG,CAAEzB,MAAO,eAC1Ca,EAAIiB,KAAK,CAACJ,EAAQD,EAAGD,EAAKI,KAE1Bd,EAAcgB,KAAK,CAACN,EAAKC,KAG3BC,EAAOD,GAAK,aACZZ,EAAIiB,KAAK,CAACJ,EAAQD,EAAGD,MAO3B,GAFA9F,EAAMoG,KAAKN,GAEPnF,MAAMC,QAAQkF,GAChB,IAAKG,EAAI,EAAGA,EAAIH,EAAIL,OAAQQ,IAC1BT,EAAOM,EAAIG,GAAIA,EAAGjG,EAAO8F,OAEtB,CACL,IAAIO,EAAOjC,OAAOiC,KAAKP,GACvB,IAAKG,EAAI,EAAGA,EAAII,EAAKZ,OAAQQ,IAAK,CAChC,IAAIK,EAAMD,EAAKJ,GACfT,EAAOM,EAAIQ,GAAMA,EAAKtG,EAAO8F,IAGjC9F,EAAM4F,OAKV,SAASW,EAAiBC,EAAGC,GAC3B,OAAID,EAAIC,GACE,EAEND,EAAIC,EACC,EAEF,EAGT,SAASxB,EAAwBI,EAAKC,EAAUC,GAC9C,IACIjG,EADAoH,EAAMC,EAAoBtB,EAAK,GAAI,QAAIzB,IAAcyB,EAOzD,IAJE/F,EAD2B,IAAzB8F,EAAcK,OACVxG,KAAKC,UAAUwH,EAAKpB,EAAUC,GAE9BtG,KAAKC,UAAUwH,EAAKhB,EAAoBJ,GAAWC,GAErC,IAAfJ,EAAIM,QAAc,CACvB,IAAIE,EAAOR,EAAIS,MACK,IAAhBD,EAAKF,OACPrB,OAAOyB,eAAeF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE7CA,EAAK,GAAGA,EAAK,IAAMA,EAAK,GAG5B,OAAOrG,EAGT,SAASqH,EAAqBb,EAAKC,EAAG/F,EAAOgG,GAC3C,IAAIC,EACJ,GAAmB,kBAARH,GAA4B,OAARA,EAAc,CAC3C,IAAKG,EAAI,EAAGA,EAAIjG,EAAMyF,OAAQQ,IAC5B,GAAIjG,EAAMiG,KAAOH,EAAK,CACpB,IAAII,EAAqB9B,OAAO+B,yBAAyBH,EAAQD,GAYjE,iBAX+BnC,IAA3BsC,EAAmBnC,IACjBmC,EAAmBzB,cACrBL,OAAOyB,eAAeG,EAAQD,EAAG,CAAEzB,MAAO,eAC1Ca,EAAIiB,KAAK,CAACJ,EAAQD,EAAGD,EAAKI,KAE1Bd,EAAcgB,KAAK,CAACN,EAAKC,KAG3BC,EAAOD,GAAK,aACZZ,EAAIiB,KAAK,CAACJ,EAAQD,EAAGD,MAK3B,GAA0B,oBAAfA,EAAIc,OACb,OAIF,GAFA5G,EAAMoG,KAAKN,GAEPnF,MAAMC,QAAQkF,GAChB,IAAKG,EAAI,EAAGA,EAAIH,EAAIL,OAAQQ,IAC1BU,EAAoBb,EAAIG,GAAIA,EAAGjG,EAAO8F,OAEnC,CAEL,IAAIY,EAAM,GACNL,EAAOjC,OAAOiC,KAAKP,GAAKe,KAAKN,GACjC,IAAKN,EAAI,EAAGA,EAAII,EAAKZ,OAAQQ,IAAK,CAChC,IAAIK,EAAMD,EAAKJ,GACfU,EAAoBb,EAAIQ,GAAMA,EAAKtG,EAAO8F,GAC1CY,EAAIJ,GAAOR,EAAIQ,GAEjB,QAAe1C,IAAXoC,EAIF,OAAOU,EAHPvB,EAAIiB,KAAK,CAACJ,EAAQD,EAAGD,IACrBE,EAAOD,GAAKW,EAKhB1G,EAAM4F,OAMV,SAASF,EAAqBJ,GAE5B,OADAA,OAAwB1B,IAAb0B,EAAyBA,EAAW,SAAUS,EAAGe,GAAK,OAAOA,GACjE,SAAUR,EAAKR,GACpB,GAAIV,EAAcK,OAAS,EACzB,IAAK,IAAIQ,EAAI,EAAGA,EAAIb,EAAcK,OAAQQ,IAAK,CAC7C,IAAIN,EAAOP,EAAca,GACzB,GAAIN,EAAK,KAAOW,GAAOX,EAAK,KAAOG,EAAK,CACtCA,EAAM,aACNV,EAAc2B,OAAOd,EAAG,GACxB,OAIN,OAAOX,EAAST,KAAKhH,KAAMyI,EAAKR,M,qEC7J9BkB,EAAgB3J,EAAQ,KAQxB6C,E,2CASJ,WAAaK,EAAME,EAASb,GAAM,MAEhC,GAFgC,WAE3BqB,OAAOC,UAAUX,GAAO,MAAM,IAAIb,MACrC,8BAEF,IAAKe,GAA8B,kBAAZA,EAAsB,MAAM,IAAIf,MACrD,wCAN8B,OAShC,cAAMe,IACDF,KAAOA,OACCqD,IAAThE,IAAoB,EAAKA,KAAOA,GAXJ,E,8CAoBhC,IAAMqH,EAAa,CACjB1G,KAAM1C,KAAK0C,KACXE,QAAS5C,KAAK4C,SAIhB,YAFkBmD,IAAd/F,KAAK+B,OAAoBqH,EAAWrH,KAAO/B,KAAK+B,MAChD/B,KAAKmC,QAAOiH,EAAWjH,MAAQnC,KAAKmC,OACjCiH,I,iCAUP,OAAOD,EACLnJ,KAAKqJ,YACLC,EACA,O,KAhDyBzH,QA0DzBS,E,2CASJ,WAAYI,EAAME,EAASb,GAEzB,GAF+B,WAcnC,SAAgCW,GAC9B,OAAOU,OAAOC,UAAUX,IAASA,GAAQ,KAAQA,GAAQ,KAblD6G,CAAuB7G,GAC1B,MAAM,IAAIb,MACR,6DAJ2B,mBAQzBa,EAAME,EAASb,G,UAjBWM,GA2BpC,SAASiH,EAAkBE,EAAG/C,GAC5B,GAAc,eAAVA,EAGJ,OAAOA,EAKTvG,EAAOC,QAAW,CAChBkC,mBACAC,0B,0YCxGF,IAAMmH,EAAcjK,EAAQ,MACtBkK,EAAsBlK,EAAQ,KAAqBmC,IAAIuB,SACrDb,EAAqB7C,EAAQ,KAA7B6C,iBAEFsH,EAAgC,4BAEhCC,EAAmB,8DAEnBC,EAAiB,CACrBnH,KAAMgH,EACN9G,QAASL,EAAmBmH,IAW9B,SAASnH,EAAmBG,GAA0C,IAApCoH,EAAoC,uDAAlBF,EAElD,GAAIxG,OAAOC,UAAUX,GAAO,CAE1B,IAAMqH,EAAarH,EAAKqE,WACxB,GAAI0C,EAAYM,GAAa,OAAON,EAAYM,GAAYnH,QAE5D,GAAIoH,EAAqBtH,GAAO,OAAOiH,EAMzC,OAAOG,EAUT,SAASG,EAAYvH,GAEnB,IAAKU,OAAOC,UAAUX,GAAO,OAAO,EAEpC,IAAMqH,EAAarH,EAAKqE,WACxB,QAAI0C,EAAYM,MAEZC,EAAqBtH,GAmE3B,SAASsH,EAAsBtH,GAC7B,OAAOA,IAAS,OAASA,IAAS,KAGpC,SAASwH,EAAqBhI,GAC5B,OAAIA,GAA0B,kBAAVA,IAAuBY,MAAMC,QAAQb,GAChDqE,OAAO4D,OAAO,GAAIjI,GAEpBA,EAKThC,EAAOC,QAAU,CACfoC,qBACA0H,cACApK,eA9DF,SAAyBqC,GAAuC,IAAhCkI,EAAgC,uDAAhBP,EAE9C,IACGO,IACAhH,OAAOC,UAAU+G,EAAc1H,OACC,kBAA1B0H,EAAcxH,QAErB,MAAM,IAAIf,MACR,sEAIJ,GAAIK,aAAiBG,EACnB,OAAOH,EAAMmH,YAGf,IAAMD,EAAa,GAyBnB,OAvBIlH,GAAS+H,EAAY/H,EAAMQ,OAE7B0G,EAAW1G,KAAOR,EAAMQ,KAEpBR,EAAMU,SAAoC,kBAAlBV,EAAMU,SAChCwG,EAAWxG,QAAUV,EAAMU,QACvBV,EAAMmI,eAAe,UAASjB,EAAWrH,KAAOG,EAAMH,QAE1DqH,EAAWxG,QAAUL,EAAmB6G,EAAW1G,MACnD0G,EAAWrH,KAAO,CAAEuI,cAAeJ,EAAoBhI,OAIzDkH,EAAW1G,KAAO0H,EAAc1H,KAChC0G,EAAWxG,QACTV,GAASA,EAAMU,QACXV,EAAMU,QACNwH,EAAcxH,QAEpBwG,EAAWrH,KAAO,CAAEuI,cAAeJ,EAAoBhI,KAGrDA,GAASA,EAAMC,QAAOiH,EAAWjH,MAAQD,EAAMC,OAC5CiH,GAsBPO","file":"static/js/2.c5d4c4b1.chunk.js","sourcesContent":["const xhr = process.browser ? require('xhr') : require('request')\nconst inherits = require('util').inherits\nconst createPayload = require('../util/create-payload.js')\nconst Subprovider = require('./subprovider.js')\nconst { ethErrors, serializeError } = require('eth-json-rpc-errors')\n\n\nmodule.exports = RpcSource\n\ninherits(RpcSource, Subprovider)\n\nfunction RpcSource(opts) {\n  const self = this\n  self.rpcUrl = opts.rpcUrl\n}\n\nRpcSource.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  const targetUrl = self.rpcUrl\n\n  // overwrite id to conflict with other concurrent users\n  const sanitizedPayload = sanitizePayload(payload)\n  const newPayload = createPayload(sanitizedPayload)\n\n  xhr({\n    uri: targetUrl,\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPayload),\n    rejectUnauthorized: false,\n    timeout: 20000,\n  }, function(err, res, body) {\n    if (err) return end(serializeError(err))\n\n    // check for error code\n    switch (res.statusCode) {\n      case 405:\n        return end(ethErrors.rpc.methodNotFound())\n      case 504: // Gateway timeout\n        return (function(){\n          let msg = `Gateway timeout. The request took too long to process. `\n          msg += `This can happen when querying logs over too wide a block range.`\n          const err = new Error(msg)\n          return end(serializeError(err))\n        })()\n      case 429: // Too many requests (rate limiting)\n        return (function(){\n          const err = new Error(`Too Many Requests`)\n          return end(serializeError(err))\n        })()\n      default:\n        if (res.statusCode != 200) {\n          const msg = 'Unknown Error: ' + res.body\n          const err = new Error(msg)\n          return end(serializeError(err))\n        }\n    }\n\n    // parse response\n    let data\n    try {\n      data = JSON.parse(body)\n    } catch (err) {\n      console.error(err.stack)\n      return end(serializeError(err))\n    }\n    if (data.error) return end(data.error)\n\n    end(null, data.result)\n  })\n}\n\n// drops any non-standard params\nfunction sanitizePayload (payload) {\n  return {\n    id: payload.id,\n    jsonrpc: payload.jsonrpc,\n    method: payload.method,\n    params: payload.params,\n  }\n}","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n","import 'regenerator-runtime/runtime';\nimport { g as get_store_value, b as app } from './onboard-d7bc5c7d.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nimport Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var pollingInterval = get_store_value(app).blockPollingInterval;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine({\n    pollingInterval: pollingInterval\n  });\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  provider.on('error', console.error);\n  return provider;\n}\n\nexport default createProvider;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n"],"sourceRoot":""}